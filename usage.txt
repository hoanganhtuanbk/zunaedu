Usage:
1) You must include pubsub javascribe sdk to your code before initializing the client
        <script src="http://localhost:3000/pubsub-client.js"></script>
2) Init
	var pubsub = pubsub-api()
	, client = pubsub.connect(YOUR-APP-ID, YOUR-CLIENT-SECRET);

3) PUBLISH
	client.publish(TOPIC, MESSAGE, [OPTIONS], [CALLBACK]);
	- TOPIC is the topic that you want to pulish to, STRING
	- MESSAGE is the message you want to publish
	- OPTIONS: {
	  + qos: QoS level, number, default is 0
	  + retain: Retain flag, boolean, default is false
	}

4) SUBSCRIBE
  client.subscribe(TOPIC, [OPTIONS], [CALLBACK])
  - TOPIC is the topic that you want to subscribe to, STRING
  - OPTIONS: {
    + qos: QoS level, default is 0
  }
  - CALLBACK - function(err, granted)
    + granted : is an array of {topic, qos} where:
      . topic is the subscribe that you subscribed to
      . qos is the granted  qos level on it

5) UNSUBSCRIBE
  client.unsubscribe(TOPIC, [CALLBACK])
  - TOPIC: a STRING topic to unsubscribe from

6) END
  Close the connection to the broker server
  client.end([FORCE], [cb])
  - FORCE: BOOLEAN

7) Receive message:
  client.on('message', [CALLBACK]);
  - CALLBACK - function(topic, message, packet) {}
    + topic: topic of the received packet
    + message: payload of the received packet
    + packet: received packet

References :
  1) MQTT.js: https://github.com/mqttjs/MQTT.js
  2) mosca: http://www.mosca.io/
